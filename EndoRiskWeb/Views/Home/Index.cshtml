@model IEnumerable<EndoRiskWeb.Models.IndexViewModel>
<!--
    Documentation: Samuel Feliciano
    First Try: using endoquestion Model:
        No way to access the choices for the questions
    Second Try: try creating multiple models in the view
        Dificult to access data required
    Third Try: create new Model : Questions
        Containts Questions and Choices
    Fourth Try: Edit select 
        (wasn't returning the proper values)
-->
@{
    ViewBag.Title = "Endometriosis Risk Calculator";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
            </hgroup>
        </div>
    </section>
}

<!-- Start the form (POST) to use in the Risk Method-->
@using (Html.BeginForm("Risk", "Home", FormMethod.Post, new { @name = "userAnswersForm" }))
{
    @Html.AntiForgeryToken()
    
   <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <!--
                Goes through every item in the Model : questions
                question includes: ID, Question, Abbreviation, Choices Set Name, and the List of Choices
            -->
            
            <p>Si posee algún número de paciente, escribálo en este campo. De lo contrario deje este campo vacío. </p><input type="text" name="PID" value=""/>
            
            @foreach (var questionItem in Model.FirstOrDefault().quest)
            {
                <!--Displays the question -->
                <p>@questionItem.question</p>
                @*<input type="text" name="@questionItem.question" value=" " required />*@ <!--Displays the question -->

                <div class="col-md-10">
                    <!--Check if the set is empty-->
                    @if (questionItem.set.Equals(""))
                    {
                        <input type="text" name="@questionItem.abbr" value="" class="required"/>
                        <p><strong>@*Note:*@</strong> @*Filling this field is required.*@</p>
                    }
                    else
                    {
                        <!--Display the choices for the question in a select-->
                        <!-- Value will be the selected choice = element(i)-->
                        <select name="@questionItem.abbr" class="required">
                            <option selected></option>

                            @foreach (var choiceIndex in questionItem.choices)
                            {
                                <option value="@choiceIndex">@choiceIndex</option>
                            }

                        </select>
                    }
                </div>
            }

            @*<p>Mark the symptoms you have been feeling: </p><input type="text" name="PID" value="" />*@
            @foreach (var symptomItem in Model.FirstOrDefault().symp)
            {
                <!--Displays the question -->
                <p><input type= "checkbox" name = "symp" value = "@symptomItem.abbr"/>@symptomItem.symptom1</p> <!--Displays the question -->
                //symptomIndex++;
            }
         </div>

        <!-- Submit button for the form -> Value : Risk (calls ActionResult Risk() in Home Controller)-->
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Someter" class="btn btn-default" disabled="disabled"/>
                            @*{ new background:green; }*@
                    </div>
                </div>
            </div>
}

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")

                <script type="text/javascript">
                    $(document).ready(function () {
                        var $submit = $("input[type=submit]");
                        var $inputs = $("input[class=required]");

                        function checkEmpty() {
                            return $inputs.filter(function() {
                                return !$.trim(this.value);
                            }).length === 0;
                        }

                        $inputs.on('blur', function() {
                            $submit.prop("disabled", !checkEmpty());
                        }).blur();
                    });
               </script>
            }



