@model IEnumerable<EndoRiskWeb.Models.questions>
<!--
    Documentation: Samuel Feliciano
    First Try: using endoquestion Model:
        No way to access the choices for the questions
    Second Try: try creating multiple models in the view
        Dificult to access data required
    Third Try: create new Model : Questions
        Containts Questions and Choices
    Fourth Try: Add Symptoms to the Model
        Contains Questions, Choices and Symptoms:
-->
@{
    ViewBag.Title = "Endometriosis Risk Calculator";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
            </hgroup>
        </div>
    </section>
}

<!-- Start the form (POST) to use in the Risk Method-->
@using (Html.BeginForm("Risk", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <!--
                Goes through every item in the Model : questions
                question includes: ID, Question, Abbreviation, Choices Set Name, and the List of Choices
            -->

            <p>Enter Patient ID: </p><input type="text" name="PID"  value=""/>

            @foreach (var item in Model)
            {
                <!--Displays the question -->
                <p>@Html.DisplayFor(model => item.question)</p> <!--Displays the question -->

                <div class="col-md-10">
                    <!--Check if the set is empty-->
                    @if (item.set.Equals(""))
                    {
                        <input type="text" name="@item.abbr" /> 
                    }
                    else {
                                              <!--Display the choices for the question in a select-->
                                               <!-- Value will be the selected choice = element(i)-->
                        <select>
                            @for (var i = 0; i < item.choices.Count; i++)
                            {
                                <option name="@item.abbr" value="@item.choices.ElementAt(i)">@item.choices.ElementAt(i)</option>
                            }
                        </select>
                    }
            </div>
            }
                </div>

        <!-- Submit button for the form -> Value : Risk (calls ActionResult Risk() in Home Controller)-->
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Risk" class="btn btn-default" />
                    </div>
                </div>
            </div>
}

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }



